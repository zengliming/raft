
akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  #actor {
  #  debug {
  #    receive = on
  #    autoreceive = on
  #    lifecycle = on
  #  }
  #}
}

raft {
    startup {
        services = []
        pinned-actors = []
    }

    pinned-dispatcher {
      executor = "thread-pool-executor"
      type = PinnedDispatcher
    }

    master-node  {
      host = 127.0.0.1
      port = 9999
    }

     ask-dispatcher {
          # Dispatcher is the name of the event-based dispatcher
          type = Dispatcher
          # What kind of ExecutionService to use
          executor = "fork-join-executor"
          # Configuration for the fork join pool
          fork-join-executor {
            # Min number of threads to cap factor-based parallelism number to
            parallelism-min = 4
            # Parallelism (threads) ... ceil(available processors * factor)
            parallelism-factor = 1.0
            # Max number of threads to cap factor-based parallelism number to
            parallelism-max = 8
          }
          # Throughput defines the maximum number of messages to be
          # processed per actor before the thread jumps to the next actor.
          # Set to 1 for as fair as possible.
          throughput = 1
        }
}