syntax = "proto3";
package proto;


option java_package = "com.zengliming.raft.proto";
//option java_outer_classname = "Example";
option java_multiple_files = true;


message MemberId {

  string name = 1;

}


message MemberEndpoint {
  MemberId id = 1;
  string host = 2;
  int32 port = 3;
}

enum MemberRole {
  LEADER = 0;
  FOLLOW = 1;
  CANDIDATE = 2;
}

message Member {
  MemberId id = 1;
  int32 current_term = 2; // 当前任期
  MemberRole role = 3;
  MemberId voted_for = 4; // 投了票的节点
  MemberEndpoint member_endpoint = 5;
  ReplicatingState replicating_state = 6;// 复制状态
}

enum ReplicatingState{
  NOT_FULL = 0; // 没有全部复制
  FULL = 1; // 全部复制

}

message RaftCommand {
  int64 command_id = 1;
  oneof payload {
    Init init = 2;
    RequestVote request_vote = 3; // 请求投票
    RequestVoteResult request_vote_result = 4; // 投票结果
    AppendEntries append_entries = 5; // 日志追加
    AppendEntriesResult append_entries_result = 6; // 日志追加结果
    MembershipChange membership_change = 7; // 成员变更
    RoleChange role_change = 9; // 角色发生变更
  }
}




message RpcCommand {
  repeated MemberEndpoint target_member_endpoints = 1;
  oneof payload {
    Init init = 2;
    RequestVote request_vote = 3;
    RequestVoteResult request_vote_result = 4;
    AppendEntries append_entries = 5;
    AppendEntriesResult append_entries_result = 6;
    MembershipChange membership_change = 7; // 成员变更
  }
}

message Init {
  Member leader = 1;
  repeated Member members = 2;
  repeated AppendEntries entries = 3;
}

message RequestVote {
  int32 term = 1;
  MemberEndpoint member_endpoint = 2; // 候选者节点，即为发送者自己
  int32 last_log_index = 3; // 候选者最后一条日志的索引
  int32 last_log_term = 4; // 候选者最后一条日志的term
}

message RequestVoteResult {
  int32 term = 1; // 选举term
  bool vote_granted = 2; //是否投票
  MemberEndpoint member_endpoint = 3;
}

message AppendEntries{
  int32 term = 1; // leader当前任期
  MemberId member_id = 2; // leader节点
  int32 pre_log_index = 3; // 上一条日志的索引
  int32 pre_log_term = 4; // 上一条日志的任期
  repeated Entry entry = 5; // 日志数据
  int32 leader_commit_index = 6; // leader节点已经commit了的索引

  message Entry{

  }
}

message AppendEntriesResult {
  int32 term = 1; // leader当前任期
  bool success = 2; // 是否追加成功
}

message MembershipChange {
  Member change_member = 1; // 变化的成员
  MembershipChangeType  membership_change_type = 2; // 变化的类型
}

enum MembershipChangeType {
  JOIN = 0;
  LEAVE = 1;
}

message RoleChange{
  MemberId leader_id = 1;
  MemberRole target_role = 2;
}